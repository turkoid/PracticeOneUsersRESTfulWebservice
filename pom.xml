<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.turkoid.rest</groupId>
    <artifactId>practiceone-users</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>practiceone-users</name>

    <properties>
        <jetty.version>9.3.11.v20160721</jetty.version>
        <jersey.version>2.23.2</jersey.version>
        <jooq.version>3.8.4</jooq.version>
        <mysql.version>5.1.39</mysql.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <finalName>practiceone-users</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <inherited>true</inherited>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>

                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.version}</version>
                    </dependency>
                </dependencies>

                <!-- Specify the plugin configuration.
                The configuration format is the same as for the standalone code generator -->
                <configuration>

                    <!-- JDBC connection parameters -->
                    <jdbc>
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://mysql.turkoid.com/practiceone</url>
                        <user>${db.username}</user>
                        <password>${db.password}</password>
                    </jdbc>

                    <!-- Generator parameters -->
                    <generator>
                        <database>
                            <name>org.jooq.util.mysql.MySQLDatabase</name>
                            <includes>.*</includes>
                            <excludes>t.*</excludes>
                            <inputSchema></inputSchema>
                            <forcedTypes>
                                <forcedType>
                                    <!-- Specify any data type from org.jooq.impl.SQLDataType -->
                                    <name>BOOLEAN</name>

                                    <!-- Add a Java regular expression matching fully-qualified columns. Use the pipe to separate several expressions.

                                         If provided, both "expressions" and "types" must match. -->
                                    <expression></expression>

                                    <!-- Add a Java regular expression matching data types to be forced to have this type.

                                         Data types may be reported by your database as:
                                         - NUMBER              regexp suggestion: NUMBER
                                         - NUMBER(5)           regexp suggestion: NUMBER\(5\)
                                         - NUMBER(5, 2)        regexp suggestion: NUMBER\(5,\s*2\)
                                         - any other form.

                                         It is thus recommended to use defensive regexes for types.

                                         If provided, both "expressions" and "types" must match. -->
                                    <types>TINYINT</types>
                                </forcedType>
                            </forcedTypes>
                        </database>

                        <target>
                            <packageName>com.turkoid.rest.dao.jooq</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.jooq/jooq -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>
    </dependencies>
</project>
